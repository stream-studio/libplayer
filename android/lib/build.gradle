apply plugin: 'com.android.library'

android {
    compileSdkVersion 32

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 32
        versionCode 1
        versionName "1.0"


        externalNativeBuild {
            ndkBuild {
                def gstRoot

                if (project.hasProperty('gstAndroidRoot'))
                    gstRoot = project.gstAndroidRoot
                else
                    gstRoot = System.env.GSTREAMER_ROOT_ANDROID

                if (gstRoot == null)
                    throw new GradleException('GSTREAMER_ROOT_ANDROID must be set, or "gstAndroidRoot" must be defined in your gradle.properties in the top level directory of the unpacked universal GStreamer Android binaries')

                arguments "NDK_APPLICATION_MK=jni/Application.mk", "GSTREAMER_JAVA_SRC_DIR=java", "GSTREAMER_ROOT_ANDROID=$gstRoot", "GSTREAMER_ASSETS_DIR=assets"

                targets "player_android"
                abiFilters  'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
            }
        }
        consumerProguardFiles 'lib-proguard-rules.txt'

    }

    buildTypes {
        release{
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        all {
            sourceSets {
                all {
                    manifest.srcFile 'AndroidManifest.xml'
                    java.srcDirs = ['java']
                    assets.srcDirs = ['assets']
                }
            }
        }
    }

    externalNativeBuild {
        ndkBuild {
            path 'jni/Android.mk'
        }
    }
}

afterEvaluate {
    if (project.hasProperty('compileDebugJavaWithJavac'))
        project.compileDebugJavaWithJavac.dependsOn 'externalNativeBuildDebug'
    if (project.hasProperty('compileReleaseJavaWithJavac'))
        project.compileReleaseJavaWithJavac.dependsOn 'externalNativeBuildRelease'
}

dependencies {
}